ai:
  inline_assistant_include_workspace_files: true
  inline_assistants:
    - provider: ollama
      model: llama3.2:latest
  openai:
    api_key_cmd: ["pass", "openai-api-key"]
symbols:
  source: universal-ctags
  ctags_timeout_ms: 500
languages:
  c: &c-settings
    formatters:
      - program: clang-format
        args: ["-"]
  cpp: *c-settings
  rust:
    root_markers:
      - .git
    linters:
      - program: typos
        args: ["--format", "brief", "--color", "never", "-"]
        use_stdin: true
        pattern: '.*:(\d+):(\d+): (.*)'
        line_match: 1
        start_col_match: 2
        description_match: 3
      - program: ec
        args:
          - -no-color
          - -format
          - gcc
          - $filename
        pattern: '(.*):(\d+):(\d+): (.*): (.*)'
        filename_match: 1
        line_match: 2
        start_col_match: 3
        severity_match: 4
        description_match: 5
        use_stdin: false
        use_stderr: false
  dockerfile:
    linters:
      - program: hadolint
        args:
          - --no-color
          - --format
          - tty
          - '-'
        description_match: 3
        line_match: 1
        pattern: '-:(\d+) [^ ]+ (\w+): (.*)'
        severity_match: 2
        use_stderr: false
        use_stdin: true
  lua:
    linters:
      - program: luacheck
        args:
          - --formatter
          - plain
          - --ranges
          - --no-color
          - '-'
        pattern: 'stdin:(\d+):(\d+)-(\d+): (.*)'
        line_match: 1
        start_col_match: 2
        end_col_match: 3
        description_match: 4
        use_stderr: false
        use_stdin: true
    formatters:
      - program: lua-format
        args:
          - "--indent-width=2"
          - "--spaces-inside-table-braces"
          - "--align-table-field"
          - "--break-before-table-rb"
          - "--chop-down-table"
          - "--no-keep-simple-control-block-one-line"
  # markdown:
  #   formatters:
  #     - program: mdformat
  #       args:
  #         - --wrap
  #         - '100'
  #         - --number
  #         - '-'
  python:
    root_markers:
      - .git
      - pyproject.toml
      - setup.py
      - mypy.ini
    formatters:
      - program: autoimport
        args: ["-"]
      - program: isort
        args: ["-", "-d"]
      - program: ruff
        args: ["check", "--fix", "--stdin-filename", "$filename"]
      - program: ruff
        args:
          - format
          - --stdin-filename
          - $filename
    linters:
      - program: ruff
        args:
          - check
          - --stdin-filename
          - $filename
        pattern: '(.*):(\d+):(\d+): (.*)'
        filename_match: 1
        line_match: 2
        start_col_match: 3
        description_match: 4
        use_stderr: false
        use_stdin: true
  sh: &sh
    linters:
      - program: shellcheck
        args: ["-f", "gcc", "-"]
        pattern: '-:(\d+):(\d+): (\w+): (.*)'
        line_match: 1
        start_col_match: 2
        severity_match: 3
        description_match: 4
        use_stderr: false
        use_stdin: true
  shell script: *sh
  bash: *sh
  # yaml:
  #   formatters:
  #     - program: yamlfmt # github.com/google/yamlfmt
  #       args: ["-in"]
  toml:
    formatters:
      - program: taplo
        args: ["format", "--stdin-filepath", "$filename", "-"]
    linters:
      - program: tomllint
        args: ["-"]
        pattern: '(.*):(\d+):(\d+): error: (.*)'
        line_match: 2
        start_col_match: 3
        description_match: 4
        use_stderr: true
        use_stdin: true
