#!/bin/bash

# shellcheck disable=SC1090
. "$HOME/.bootstrappyrc"

raw_toolname="$(basename "$0")"
toolname="${raw_toolname//-/_}"
progname="bootstrappy[$raw_toolname]"

die() {
  printf "\033[0;38;2;200;15;15m%s\033[0m: error: " "$progname" >&2
  printf "%s" "$@" >&2
  printf "\n" >&2
  exit 1
}

install() {
  package="${1//-/_}"
  echo "$0: installing $package"
  ( pip install "$package" >&2 ) || die "failed to install $package"
}
envdir="$HOME/.bootstrappy/$raw_toolname"
activate="$envdir/bin/activate"

if ! [[ -f "$activate" ]]; then
  ( python3 -mvenv "$envdir" >&2 ) || die "unable to make a virtualenv [envdir=$envdir]"
  if ! [[ -f "$activate" ]]; then
    die "could not create virtual env"
  fi
  # shellcheck disable=SC1090
  . "$activate" || die "python env is not set up [envdir=$envdir]"
  if [[ -n "${!toolname}" ]]; then
    # User has defined an override for this toolname's installation package.
    install "${!toolname}"
  else
    # Use the raw toolname itself as an installation package.
    install "$raw_toolname"
  fi
else
  # shellcheck disable=SC1090
  . "$activate" || die "python env is not set up [envdir=$envdir]"
fi

if [[ "$(realpath "$(command -v "$raw_toolname")")" == "$(realpath "$0")" ]]; then
  die "tool resolves back to bootstrappy [toolname=$raw_toolname]"
fi
exec "$raw_toolname" "$@"
