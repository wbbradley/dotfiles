#!/bin/bash

dbg() {
  echo "$(date -Iseconds): $0 $*" >> "$HOME"/bootstrappy.log
  if [[ -n $BOOTSTRAPPY_VERBOSE ]]; then
    printf "\001\033[0;38;2;100;150;150m\002%s\001\033[0m\002: " "bootstrappy" >&2
    printf "%s" "$*" >&2
    printf "\n" >&2
  fi
}

raw_toolname="$(basename "$0")"
if [[ -x .venv/bin/"$raw_toolname" ]]; then
  # This tool already exists inside the local virtualenv.
  dbg "running $raw_toolname from $PWD/.venv/bin [PWD='$PWD', args=($*)]"
  tmpfile="$(mktemp)"
  trap 'rm '"$tmpfile" EXIT
  /usr/bin/time -o "$tmpfile" .venv/bin/"$raw_toolname" "$@"
  dbg "$raw_toolname took $(cat "$tmpfile")"
fi

# shellcheck disable=SC1091
dbg "sourcing $HOME/.bootstrappyrc"
# shellcheck disable=SC1091
. "$HOME/.bootstrappyrc"

toolname="${raw_toolname//-/_}"
progname="bootstrappy[$raw_toolname]"


die() {
  printf "\001\033[0;38;2;200;15;15m\002%s\001\033[0m\002: error: " "$progname" >&2
  printf "%s" "$*" >&2
  printf "\n" >&2
  exit 1
}

install() {
  envdir="$1"
  package="$2"
  dbg "bootstrappy: installing $package"
  "$envdir"/bin/python -muv pip install "$package" >&2 || die "failed to install $package"
}

# envdir is where the user-site packages will be installed.
envdir="$HOME/.bootstrappy"

if ! [[ -f "$envdir"/pyvenv.cfg ]]; then
  # Make sure the bootstrappy virtual environment is set up.
  dbg "creating $(dirname "$envdir")"
  mkdir -p "$(dirname "$envdir")"
  dbg "installing venv"
  python3 -mvenv "$envdir" || die "creating $envdir venv"
fi

if ! [[ -x "$envdir"/bin/uv ]]; then
  # Ensure that uv is installed.
  dbg "installing uv"
  "$envdir"/bin/python -mpip install -U uv pyyaml types-PyYAML || die "installing uv"
fi

if ! [[ -x "$envdir"/bin/"$raw_toolname" ]]; then
  # It looks like our tool is not installed.
  if [[ -n "${!toolname}" ]]; then
    # User has defined an override for this toolname's installation package.
    dbg "[bootstrappy] using .bootstrappyrc override for $toolname=${!toolname}"
    install "$envdir" "${!toolname}"
  else
    # Use the raw toolname itself as an installation package.
    install "$envdir" "$raw_toolname"
  fi
  if ! [[ -x "$envdir"/bin/"$raw_toolname" ]]; then
    die "installation of '$raw_toolname' failed [toolname='$toolname', resolved='${!toolname}']"
  fi
fi

dbg "dispatching to '$envdir/bin/$raw_toolname' with args=($*)"
exec "$envdir"/bin/"$raw_toolname" "$@"
