#!/bin/bash
set -e

function maybe-dir {
	[[ -d $1 ]] && echo $1
}

# First index the local directory
ctags \
	-R \
	--c-kinds=+p \
	--c++-kinds=+p \
	--exclude=build \
	--exclude=makefile \
	--exclude=TableGen \
	--exclude=Target \
	--exclude=Analysis \
	--exclude=CodeGen \
	--exclude=static \
	--exclude=generated \
	--exclude=env \
	--exclude=assets \
	--exclude=node_modules \
	--exclude=bower_components \
	.

# Now index any other interesting includes that I may want to peruse.
ctags \
	-R \
	-a \
	--c-kinds=+p \
	--c++-kinds=+p \
	-I DECLSPEC \
	-I SDLCALL \
	-I SDL_PRINTF_VARARG_FUNC+ \
	-I SDL_PRINTF_FORMAT_STRING \
	$(maybe-dir /usr/include/SDL2) \
	$(maybe-dir /usr/include/SDL2) \
	$(maybe-dir /usr/include/x86_64-linux-gnu) \
	$(maybe-dir /usr/local/Cellar/llvm\@6/6.0.1_1/include/llvm/IR) \
	$(maybe-dir /usr/local/Cellar/llvm\@6/6.0.1_1/include/llvm/Transforms/Utils)
	

case "$(uname -s)" in
    Linux)
      sed -i -E 's/^[a-zA-Z]+\.(.*)/\1/' tags
      ;;
    *)
      echo "TODO: Fix tags"
      ;;
esac

wc -l tags
ZION_TAGS=/var/tmp/tags.zion
echo "Tags are complete."
exit 0

if [[ -f "lib/std.zion" ]]; then
	# We are in the Zion codebase, let's use Zion's tags generation support
	zion ctags lib/std | sort | uniq > $ZION_TAGS
	cat $ZION_TAGS >> tags
	wc -l $ZION_TAGS
	cat tags | sort | uniq > tags.new
	mv tags.new tags
fi

echo "Tags are complete."
